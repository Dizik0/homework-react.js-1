{"version":3,"sources":["Components/profile/profileStyle.module.scss","Components/Statistics/StatisticsStyle.module.scss","Components/FriendList/FriendList.module.scss","Components/TransactionHistory/TransactionHistory.module.scss","Components/profile/Profile.js","Components/Statistics/randomColor.js","Components/Statistics/Statistics.js","Components/FriendList/FriendList.js","Components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","style","profile","src","alt","label","quantity","randColor","r","Math","floor","random","g","b","toString","Function","defaultProps","Statistics","title","styles","statistics","statList","map","percentage","id","item","backgroundColor","FriendList","friends","isOnline","status","statusFalse","width","TransactionHistory","items","type","amount","currency","App","ProfileData","data","friendData","TransactionHistoryData","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,OAAS,6BAA6B,KAAO,2BAA2B,IAAM,0BAA0B,SAAW,+BAA+B,MAAQ,4BAA4B,SAAW,+BAA+B,MAAQ,8B,gBCAlSD,EAAOC,QAAU,CAAC,SAAW,kCAAkC,KAAO,8BAA8B,MAAQ,+BAA+B,WAAa,oCAAoC,MAAQ,+BAA+B,WAAa,sC,4PCAhPD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,yBAAyB,OAAS,2BAA2B,YAAc,kC,s4BCAxKD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,UAAU,oCAAoC,MAAQ,kCAAkC,KAAO,mC,8nEC+CtKC,EA9CC,SAAC,GAMV,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,SAGI,IAFJC,cAEI,MAFK,kEAEL,MADJC,MAASC,EACL,EADKA,UAAWC,EAChB,EADgBA,MAAOC,EACvB,EADuBA,MAE3B,OACE,sBAAKC,UAAWC,IAAMC,QAAtB,UACE,gCACE,qBAAKC,IAAKR,EAAQS,IAAI,gHAAsBJ,UAAWC,IAAMN,SAC7D,mBAAGK,UAAWC,IAAMT,KAApB,SAA2BA,IAC3B,mBAAGQ,UAAWC,IAAMR,IAApB,SAA0BA,IAC1B,mBAAGO,UAAWC,IAAMP,SAApB,SAA+BA,OAGjC,qBAAIM,UAAWC,IAAML,MAArB,UACE,+BACE,sBAAMI,UAAWC,IAAMI,MAAvB,uBACA,sBAAML,UAAWC,IAAMK,SAAvB,SAAkCT,MAF5B,QAIR,+BACE,sBAAMG,UAAWC,IAAMI,MAAvB,mBACA,sBAAML,UAAWC,IAAMK,SAAvB,SAAkCR,MAF5B,QAIR,+BACE,sBAAME,UAAWC,IAAMI,MAAvB,mBACA,sBAAML,UAAWC,IAAMK,SAAvB,SAAkCP,MAF5B,e,uBCpBDQ,MAPf,WACE,IAAIC,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBC,EAAIH,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBE,EAAIJ,KAAKC,MAAsB,IAAhBD,KAAKE,UACtB,MAAO,IAAMH,EAAEM,SAAS,IAAMF,EAAEE,SAAS,IAAMD,EAAEC,SAAS,KC4B5DC,SAASC,aAAe,CACtBpB,MAAO,IAGMqB,MAhCI,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAOsB,EAAV,EAAUA,MAAV,OACjB,0BAASlB,UAAWmB,IAAOC,WAA3B,UACGF,GAAS,oBAAIlB,UAAWmB,IAAOD,MAAtB,0BAEV,oBAAIlB,UAAWmB,IAAOE,SAAtB,SACGzB,EAAM0B,KAAI,gBAAGjB,EAAH,EAAGA,MAAOkB,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,GAAtB,OACT,qBAEExB,UAAWmB,IAAOM,KAClBxB,MAAO,CAAEyB,gBAAiBnB,KAH5B,UAKE,sBAAMP,UAAWmB,IAAOd,MAAxB,SAAgCA,IAChC,sBAAML,UAAWmB,IAAOI,WAAxB,SAAqCA,MALhCC,Y,uBCTTG,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,6BACGA,EAAQN,KACP,gBACEE,EADF,EACEA,GADF,IAEE7B,cAFF,MAEW,kEAFX,EAGEH,EAHF,EAGEA,KACAqC,EAJF,EAIEA,SAJF,OAME,qBAAI7B,UAAWmB,IAAOM,KAAtB,UACGI,EACC,sBAAM7B,UAAWmB,IAAOW,OAAxB,SAAiCD,IAEjC,sBAAM7B,UAAWmB,IAAOY,cAG1B,qBACE/B,UAAWmB,IAAOxB,OAClBQ,IAAKR,EACLS,IAAI,SACJ4B,MAAM,OAER,mBAAGhC,UAAWmB,IAAO3B,KAArB,SAA4BA,MAbGgC,SA+B3CG,EAAWX,aAAe,CACxBY,QAAS,IAGID,Q,wBC7CTM,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,wBAAOlC,UAAWmB,IAAOc,mBAAzB,UACE,gCACE,+BACE,sCACA,wCACA,+CAGJ,gCACGC,EAAMZ,KAAI,gBAAGa,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,SAAUb,EAA3B,EAA2BA,GAA3B,OACT,+BACE,6BAAKW,IACL,6BAAKC,IACL,6BAAKC,MAHEb,YAoBjBS,EAAmBjB,aAAe,CAChCkB,MAAO,IAGMD,Q,QCVAK,MAjBf,WACE,OACE,qCACE,cAAC,EAAD,CACE9C,KAAM+C,EAAY/C,KAClBC,IAAK8C,EAAY9C,IACjBC,SAAU6C,EAAY7C,SACtBC,OAAQ4C,EAAY5C,OACpBC,MAAO2C,EAAY3C,QAErB,cAAC,EAAD,CAAYsB,MAAOsB,EAAM5C,MAAO4C,IAChC,cAAC,EAAD,CAAYZ,QAASa,IACrB,cAAC,EAAD,CAAoBP,MAAOQ,QCVlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuB7B,UACxC,6BAAqB8B,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f84db8cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profileStyle_profile__1S2Up\",\"avatar\":\"profileStyle_avatar__2dyCL\",\"name\":\"profileStyle_name__3ORSi\",\"tag\":\"profileStyle_tag__2uhZ1\",\"location\":\"profileStyle_location__1t_ny\",\"stats\":\"profileStyle_stats__1JaT5\",\"quantity\":\"profileStyle_quantity__2zetx\",\"label\":\"profileStyle_label__3fMld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"StatisticsStyle_statList__23iFP\",\"item\":\"StatisticsStyle_item__2QD8a\",\"label\":\"StatisticsStyle_label__25TL3\",\"percentage\":\"StatisticsStyle_percentage__1pbd8\",\"title\":\"StatisticsStyle_title__3gTJM\",\"statistics\":\"StatisticsStyle_statistics__2YYcc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__1y9Mt\",\"avatar\":\"FriendList_avatar__2J1mP\",\"name\":\"FriendList_name__1eUyW\",\"status\":\"FriendList_status__22jpo\",\"statusFalse\":\"FriendList_statusFalse__2f06i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"TransactionHistory_TransactionHistory__34TYa\",\"odd-row\":\"TransactionHistory_odd-row__1pcBF\",\"first\":\"TransactionHistory_first__pL43a\",\"last\":\"TransactionHistory_last__W1VrA\"};","import PropTypes from \"prop-types\";\r\nimport style from \"./profileStyle.module.scss\";\r\nconst Profile = ({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar = \"http://rostov-gorod.ru/local/templates/markup/img/70_no-img.jpg\",\r\n  stats: { followers, views, likes },\r\n}) => {\r\n  return (\r\n    <div className={style.profile}>\r\n      <div>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={style.avatar} />\r\n        <p className={style.name}>{name}</p>\r\n        <p className={style.tag}>{tag}</p>\r\n        <p className={style.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={style.stats}>\r\n        <li key=\"id-1\">\r\n          <span className={style.label}>Followers</span>\r\n          <span className={style.quantity}>{followers}</span>\r\n        </li>\r\n        <li key=\"id-2\">\r\n          <span className={style.label}>Views</span>\r\n          <span className={style.quantity}>{views}</span>\r\n        </li>\r\n        <li key=\"id-3\">\r\n          <span className={style.label}>Likes</span>\r\n          <span className={style.quantity}>{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","function randColor() {\r\n  var r = Math.floor(Math.random() * 256),\r\n    g = Math.floor(Math.random() * 256),\r\n    b = Math.floor(Math.random() * 256);\r\n  return \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\r\n}\r\n\r\nexport default randColor;\r\n","import styles from \"./StatisticsStyle.module.scss\";\r\nimport randColor from \"./randomColor\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ stats, title }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>Upload stats</h2>}\r\n\r\n    <ul className={styles.statList}>\r\n      {stats.map(({ label, percentage, id }) => (\r\n        <li\r\n          key={id}\r\n          className={styles.item}\r\n          style={{ backgroundColor: randColor() }}\r\n        >\r\n          <span className={styles.label}>{label}</span>\r\n          <span className={styles.percentage}>{percentage}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\nFunction.defaultProps = {\r\n  stats: [],\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./FriendList.module.scss\";\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul>\r\n      {friends.map(\r\n        ({\r\n          id,\r\n          avatar = \"http://rostov-gorod.ru/local/templates/markup/img/70_no-img.jpg\",\r\n          name,\r\n          isOnline,\r\n        }) => (\r\n          <li className={styles.item} key={id}>\r\n            {isOnline ? (\r\n              <span className={styles.status}>{isOnline}</span>\r\n            ) : (\r\n              <span className={styles.statusFalse}></span>\r\n            )}\r\n\r\n            <img\r\n              className={styles.avatar}\r\n              src={avatar}\r\n              alt=\"avatar\"\r\n              width=\"48\"\r\n            />\r\n            <p className={styles.name}>{name}</p>\r\n          </li>\r\n        )\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nFriendList.defaultProps = {\r\n  friends: [],\r\n};\r\n\r\nexport default FriendList;\r\n","import styles from \"./TransactionHistory.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.TransactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(({ type, amount, currency, id }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nTransactionHistory.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import \"./App.css\";\nimport Profile from \"./Components/profile/Profile\";\nimport ProfileData from \"./Components/profile/user.json\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport data from \"./Components/Statistics/statistical-data.json\";\nimport FriendList from \"./Components/FriendList/FriendList\";\nimport friendData from \"./Components/FriendList/friends.json\";\nimport TransactionHistory from \"./Components/TransactionHistory/TransactionHistory\";\nimport TransactionHistoryData from \"./Components/TransactionHistory/transactions.json\";\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={ProfileData.name}\n        tag={ProfileData.tag}\n        location={ProfileData.location}\n        avatar={ProfileData.avatar}\n        stats={ProfileData.stats}\n      />\n      <Statistics title={data} stats={data} />\n      <FriendList friends={friendData} />\n      <TransactionHistory items={TransactionHistoryData} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}